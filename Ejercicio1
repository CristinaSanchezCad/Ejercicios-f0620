package e.ejercicio1;


import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.util.HashMap;
import java.util.Map;
import java.util.TreeMap;

public class Ejercicio1 {

	public static void main(String[] args) {
		Map<String, Map<String, Integer>> info = new TreeMap<>();
		BufferedReader in = null;
		try {
			in = new BufferedReader(new InputStreamReader(new FileInputStream("res/server.log"), "utf-8"));
			Map<String, Integer> infoUsuario;
			String linea;
			while((linea = in.readLine()) != null) {
				String [] tokens = linea.split(";");
				String usuario = tokens[2].split("=")[1];
				String ip = tokens[0].split("=")[1];
				infoUsuario = info.get(usuario);
				if (infoUsuario == null) {
					infoUsuario = new HashMap<>();
					info.put(usuario, infoUsuario);
				}
				Integer n = infoUsuario.get(ip);
				if (n == null)
					n = 1;
				else
					n++;
				infoUsuario.put(ip, n);
			}
			for (var entry: info.entrySet()) {
				infoUsuario = entry.getValue();
				System.out.println(entry.getKey() + " (" + infoUsuario.size() + ")");
				for (var ipInfo: infoUsuario.entrySet())
					System.out.println("\t" + ipInfo.getKey() + " -> " + ipInfo.getValue());
			}
		} catch (UnsupportedEncodingException e) {
			e.printStackTrace();
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		} finally {
			if (in != null)
				try {
					in.close();
				} catch (IOException e) {
					e.printStackTrace();
				}
		}
	}
	
}

/*Ejercicio 1 (3 puntos)
Dado un fichero de texto en el que se almacena el log de mensajes enviados por una serie de usuarios
a través de un determinado servidor, se pretende procesar los datos en él almacenados para obtener la
siguiente información:

Número de mensajes que envía cada usuario por cada IP desde la que se ha conectado.
Número total de IPs desde las que ha enviado mensajes cada usuario.

El fichero de texto consta de un número indeterminado de líneas y en cada una de ellas se almacena información de un mensaje enviado por
un usuario desde una IP con el formato siguiente:
IP=dirección_ip;mensaje=texto_del_mensaje;usuario=nombre_de_usuario
Toda la información obtenida ha de quedar accesible a través de una única referencia a una estructura de datos dinámica. El
programa finalizará mostrando en la consola la información obtenida con el formato siguiente:
nombre_de_usuario (número_total_de_IPs):
dirección_ip -> número_de_mensajes
dirección_ip -> número_de_mensajes
.
.
.
nombre_de_usuario (número_total_de_IPs):
dirección_ip -> número_de_mensajes
dirección_ip -> número_de_mensajes
.
.
.
El problema se ha de resolver según las especificaciones siguientes:

Se definirá una única clase llamada Ejercicio1 que solo contendrá el método main. No se permite la definición de clases adicionales.
Se asume que el fichero de texto se ajusta al formato especificado y, por tanto, no es necesario realizar ningún tipo de comprobación para detectar errores de formato.
Se asume que el texto de los mensajes en el fichero de texto no va a contener los caracteres ';' o '='.
Es posible que antes y después de los caracteres ';' o '=' haya espacios en blanco que habrá que ignorar. */
